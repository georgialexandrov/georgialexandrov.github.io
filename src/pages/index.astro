---
import { getCollection } from 'astro:content';
import BlogLayout from '../layouts/BlogLayout.astro';

const posts = await getCollection('blog');
const sortedPosts = posts.sort((a, b) => b.data.date.getTime() - a.data.date.getTime());

function formatDate(date: Date): string {
  return date.toLocaleDateString('en-US', { 
    year: 'numeric', 
    month: 'long', 
    day: 'numeric' 
  });
}

function calculateReadTime(content: string): number {
  const words = content.split(/\s+/).length;
  return Math.ceil(words / 150);
}

function getExcerpt(content: string): string {
  const firstSentence = content.split('.')[0];
  return firstSentence.length > 200 ? firstSentence.substring(0, 200) + '...' : firstSentence + '.';
}
---

<BlogLayout title="Georgi Alexandrov">
  {sortedPosts.map(async (post) => {
    const { Content } = await post.render();
    const content = post.body;
    
    return (
      <article class="post h-entry" itemscope itemtype="http://schema.org/BlogPosting">
        <header class="post-header">
          <a class="post-link" href={`/blog/${post.slug}`}>{post.data.title}</a>
          <time class="dt-published" datetime={post.data.date.toISOString()} itemprop="datePublished">
            <span class="post-meta">
              {formatDate(post.data.date)} | {calculateReadTime(content)} minute read
            </span>
          </time>
        </header>
        
        <div class="post-content e-content" itemprop="articleBody">
          {getExcerpt(content)} <a href={`/blog/${post.slug}`}>...</a>
        </div>
      </article>
    );
  })}
</BlogLayout>
